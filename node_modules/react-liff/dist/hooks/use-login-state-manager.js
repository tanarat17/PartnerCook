var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { useEffect, useState } from 'react';
export const useLoginStateManager = (liff) => {
    const _a = liff !== null && liff !== void 0 ? liff : {}, { isLoggedIn = () => false, login = () => { }, logout = () => { } } = _a, rest = __rest(_a, ["isLoggedIn", "login", "logout"]);
    const [loginState, setLoginState] = useState(false);
    useEffect(() => {
        setLoginState(isLoggedIn());
    }, [isLoggedIn]);
    const customLogin = (...args) => {
        login(...args);
        setLoginState(isLoggedIn());
    };
    const customLogout = () => {
        logout();
        setLoginState(isLoggedIn());
    };
    return [loginState, Object.assign(Object.assign({}, rest), { isLoggedIn, login: customLogin, logout: customLogout })];
};
