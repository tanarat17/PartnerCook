{
  "version": 3,
  "sources": ["../../leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.js"],
  "sourcesContent": ["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('leaflet')) :\n\ttypeof define === 'function' && define.amd ? define(['leaflet'], factory) :\n\t(factory(global.L));\n}(this, (function (L) { 'use strict';\n\n\tL.Icon.Default.mergeOptions({\n\t\t// Erase default options, so that they can be overridden by _initializeOptions if not supplied.\n\t\ticonUrl: null,\n\t\ticonRetinaUrl: null,\n\t\tshadowUrl: null,\n\t\ticonSize: null,\n\t\ticonAnchor: null,\n\t\tpopupAnchor: null,\n\t\ttooltipAnchor: null,\n\t\tshadowSize: null,\n\n\t\t// @option classNamePrefix: String = 'leaflet-default-icon-'\n\t\t// Prefix for the classes defined in CSS that contain the Icon options.\n\t\t// See the leaflet-defaulticon-compatibility.css file as a starter.\n\t\t// Expected suffixes are \"icon\", \"shadow\", \"popup\" and \"tooltip\".\n\t\tclassNamePrefix: 'leaflet-default-icon-',\n\t});\n\n\n\tL.Icon.Default.include({\n\n\t\t_needsInit: true,\n\n\t\t// Override to make sure options are retrieved from CSS.\n\t\t_getIconUrl: function (name) {\n\t\t\t// @option imagePath: String\n\t\t\t// `Icon.Default` will try to auto-detect the location of\n\t\t\t// the blue icon images. If you are placing these images in a\n\t\t\t// non-standard way, set this option to point to the right\n\t\t\t// path, before any marker is added to a map.\n\t\t\t// Caution: do not use this option with inline base64 image(s).\n\t\t\tvar imagePath = this.options.imagePath || L.Icon.Default.imagePath || '';\n\t\t\t// Deprecated (IconDefault.imagePath), backwards-compatibility only\n\n\t\t\tif (this._needsInit) {\n\t\t\t\t// Modifying imagePath option after _getIconUrl has been called\n\t\t\t\t// once in this instance of IconDefault will no longer have any\n\t\t\t\t// effect.\n\t\t\t\tthis._initializeOptions(imagePath);\n\t\t\t}\n\n\t\t\treturn imagePath + L.Icon.prototype._getIconUrl.call(this, name);\n\t\t},\n\n\t\t// Initialize all necessary options for this instance.\n\t\t_initializeOptions: function (imagePath) {\n\t\t\tthis._setOptions('icon', _detectIconOptions, imagePath);\n\t\t\tthis._setOptions('shadow', _detectIconOptions, imagePath);\n\t\t\tthis._setOptions('popup', _detectDivOverlayOptions);\n\t\t\tthis._setOptions('tooltip', _detectDivOverlayOptions);\n\t\t\tthis._needsInit = false;\n\t\t},\n\n\t\t// Retrieve values from CSS and assign to this instance options.\n\t\t_setOptions: function (name, detectorFn, imagePath) {\n\t\t\tvar options = this.options,\n\t\t\t    prefix = options.classNamePrefix,\n\t\t\t    optionValues = detectorFn(prefix + name, imagePath);\n\n\t\t\tfor (var optionName in optionValues) {\n\t\t\t\toptions[name + optionName] = options[name + optionName] || optionValues[optionName];\n\t\t\t}\n\t\t}\n\n\t});\n\n\n\t// Retrieve icon option values from CSS (icon or shadow).\n\tfunction _detectIconOptions(className, imagePath) {\n\t\tvar el = L.DomUtil.create('div',  className, document.body),\n\t\t    urlsContainer = _getBkgImageOrCursor(el),\n\t\t    urls = _extractUrls(urlsContainer, imagePath),\n\t\t    iconX = _getStyleInt(el, 'width'),\n\t\t    iconY = _getStyleInt(el, 'height'),\n\t\t    anchorNX = _getStyleInt(el, 'margin-left'),\n\t\t    anchorNY = _getStyleInt(el, 'margin-top');\n\n\t\tel.parentNode.removeChild(el);\n\n\t\treturn {\n\t\t\tUrl: urls[0],\n\t\t\tRetinaUrl: urls[1],\n\t\t\tSize: [iconX, iconY],\n\t\t\tAnchor: [-anchorNX, -anchorNY]\n\t\t};\n\t}\n\n\t// Retrieve anchor option values from CSS (popup or tooltip).\n\tfunction _detectDivOverlayOptions(className) {\n\t\tvar el = L.DomUtil.create('div', className, document.body),\n\t\t    anchorX = _getStyleInt(el, 'margin-left'),\n\t\t    anchorY = _getStyleInt(el, 'margin-top');\n\n\t\tel.parentNode.removeChild(el);\n\n\t\treturn {\n\t\t\tAnchor: [anchorX, anchorY]\n\t\t};\n\t}\n\n\t// Read the CSS url (could be path or inline base64), may be multiple.\n\t// First: normal icon\n\t// Second: Retina icon\n\tfunction _extractUrls(urlsContainer, imagePath) {\n\t\tvar re = /url\\(['\"]?([^\"']*?)['\"]?\\)/gi, // Match anything between url( and ), possibly with single or double quotes.\n\t\t    urls = [],\n\t\t    m = re.exec(urlsContainer);\n\n\t\twhile (m) {\n\t\t\t// Keep the entire URL from CSS rule, so that each image can have its own full URL.\n\t\t\t// Except in the case imagePath is provided: remove the path part (i.e. keep only the file name).\n\t\t\turls.push(imagePath ? _stripPath(m[1]) : m[1]);\n\t\t\tm = re.exec(urlsContainer);\n\t\t}\n\n\t\treturn urls;\n\t}\n\n\t// Remove anything before the last slash (/) occurrence (inclusive).\n\t// Caution: will give unexpected result if url is inline base64 data\n\t// => do not specify imagePath in that case!\n\tfunction _stripPath(url) {\n\t\treturn url.substr(url.lastIndexOf('/') + 1);\n\t}\n\n\tfunction _getStyleInt(el, style) {\n\t\treturn parseInt(_getStyle(el, style), 10);\n\t}\n\n\t// Factorize style reading fallback for IE8.\n\tfunction _getStyle(el, style) {\n\t\treturn L.DomUtil.getStyle(el, style) || L.DomUtil.getStyle(el, _kebabToCamelCase(style));\n\t}\n\n\t// When Firefox high contrast (colours override) option is enabled,\n\t// \"background-image\" is overridden by the browser as \"none\".\n\t// In that case, fallback to \"cursor\". But keep \"background-image\"\n\t// as primary source because IE expects cursor URL as relative to HTML page\n\t// instead of relative to CSS file.\n\tfunction _getBkgImageOrCursor(el) {\n\t\tvar bkgImage = _getStyle(el, 'background-image');\n\n\t\treturn bkgImage && bkgImage !== 'none' ? bkgImage : _getStyle(el, 'cursor');\n\t}\n\n\t// Convert kebab-case CSS property name to camelCase for IE currentStyle.\n\tfunction _kebabToCamelCase(prop) {\n\t\treturn prop.replace(/-(\\w)/g, function (str, w) {\n\t\t\treturn w.toUpperCase();\n\t\t});\n\t}\n\n})));\n"],
  "mappings": "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",
  "names": []
}
